{
  "$ref": "#/definitions/action",
  "definitions": {
    "action": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the action."
        },
        "description": {
          "type": "string",
          "description": "A short description of the action."
        },
        "author": {
          "type": "string",
          "description": "The author of the action."
        },
        "branding": {
          "type": "object",
          "properties": {
            "color": {
              "type": "string",
              "description": "The primary color of the brand"
            },
            "icon": {
              "type": "string",
              "description": "The icon best representing the action category"
            }
          },
          "required": ["color", "icon"],
          "additionalProperties": false,
          "description": "You can use a color and Feather icon to create a badge to personalize and distinguish your action."
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A string description of the input parameter."
              },
              "default": {
                "description": "A string representing the default value. The default value is used when an input parameter is not specified in a workflow file."
              },
              "required": {
                "type": "boolean",
                "description": "A boolean to indicate whether the action requires the input parameter. Set to true when the parameter is required."
              },
              "deprecationMessage": {
                "type": "string",
                "description": "If the input parameter is used, this string is logged as a warning message. You can use this warning to notify users that the input is closing down and mention any alternatives."
              }
            },
            "additionalProperties": false
          },
          "description": "Input parameters allow you to specify data that the action expects to use during runtime."
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A string description of the output parameter."
              },
              "value": {
                "type": "string",
                "description": "The value that the output parameter will be mapped to. You can set this to a string or an expression with context."
              }
            },
            "required": ["value"],
            "additionalProperties": false
          },
          "description": "Output parameters allow you to declare data that an action sets."
        },
        "runs": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "using": {
                  "type": "string",
                  "const": "composite"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "A unique identifier for the step."
                      },
                      "run": {
                        "type": "string",
                        "description": "The command you want to run."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the composite step."
                      },
                      "shell": {
                        "type": "string"
                      },
                      "working-directory": {
                        "type": "string",
                        "description": "Specifies the working directory where the command is run."
                      },
                      "env": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Sets a map of environment variables for only that step."
                      },
                      "if": {
                        "type": "string",
                        "description": "You can use the if conditional to prevent a step from running unless a condition is met. You can use any supported context and expression to create a conditional."
                      }
                    },
                    "additionalProperties": false
                  },
                  "description": "The steps that you plan to run in this action. These can be either run steps or uses steps."
                }
              },
              "required": ["using", "steps"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "using": {
                  "type": "string",
                  "enum": ["node16", "node18", "node20", "node22"],
                  "description": "The runtime used to execute the code specified in main."
                },
                "main": {
                  "type": "string",
                  "description": "The file that contains your action code."
                },
                "pre": {
                  "type": "string",
                  "description": "Allows you to run a script at the start of a job, before the main: action begins"
                },
                "pre-if": {
                  "type": "string",
                  "description": "Allows you to define conditions for the pre: action execution. The pre: action will only run if the conditions in pre-if are met. If not set, then pre-if defaults to always()."
                },
                "post": {
                  "type": "string",
                  "description": "Allows you to run a script at the end of a job, once the main: action has completed."
                },
                "post-if": {
                  "type": "string",
                  "description": "Allows you to define conditions for the post: action execution. The post: action will only run if the conditions in post-if are met. If not set, then post-if defaults to always()."
                }
              },
              "required": ["using", "main"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "pre-entrypoint": {
                  "type": "string",
                  "description": "Allows you to run a script before the entrypoint action begins. For example, you can use pre-entrypoint: to run a prerequisite setup script."
                },
                "using": {
                  "type": "string",
                  "const": "docker"
                },
                "image": {
                  "type": "string",
                  "description": "The Docker image to use as the container to run the action. The value can be the Docker base image name, a local Dockerfile in your repository, or a public image in Docker Hub or another registry"
                },
                "entrypoint": {
                  "type": "string",
                  "description": "Overrides the Docker ENTRYPOINT in the Dockerfile, or sets it if one was not already specified."
                },
                "post-entrypoint": {
                  "type": "string",
                  "description": "Allows you to run a script after the entrypoint action completes."
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array of strings that define the inputs for a Docker container. Inputs can include hardcoded strings. GitHub passes the args to the container ENTRYPOINT when the container starts up."
                },
                "env": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Specifies a key/value map of environment variables to set in the container environment."
                }
              },
              "required": ["using", "image"],
              "additionalProperties": false
            }
          ]
        }
      },
      "required": ["name", "description", "runs"],
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
